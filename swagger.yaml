openapi: 3.0.1
info:
  title: 'Remote Patient Monitoring System API(dev)'
  description: '遠隔療養者モニタリングシステムのAPIです。(dev)'
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: hal@code4japan.org
  license:
    name: GNU AGPL v3
    url: >-
      https://github.com/codeforjapan/remote-patient-monitoring-api/blob/main/LICENSE
  version: 1.0.0
servers:
  - url: 'https://api.rms.stopcovid19.jp/stg/'
  - url: 'https://api.rms.stopcovid19.jp/prd/'
paths:
  /api/admin/login:
    post:
      tags:
        - Login
      summary: Admin でログインする
      description: Admin ユーザでログインする
      requestBody:
        description: center model which you want to create.
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                refreshToken:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  idToken:
                    type: string
                  refreshToken:
                    type: string
                  policyAccepted:
                    type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '401':
          description: Unauthorized
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          AUTH.*:
            statusCode: '401'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-postAdminLogin-dev/invocations
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  /api/nurse/login:
    post:
      tags:
        - Login
      summary: Nurse ユーザででログインする
      description: Nurse ユーザでログインする
      requestBody:
        description: Nurse のID/Pass
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                refreshToken:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  idToken:
                    type: string
                  refreshToken:
                    type: string
                  policyAccepted:
                    type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '401':
          description: Unauthorized
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          AUTH.*:
            statusCode: '401'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-postNurseLogin-dev/invocations
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  /api/patient/login:
    post:
      tags:
        - Login
      summary: Patient でログインする
      description: Patient ユーザでログインする
      requestBody:
        description: patient login info
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                refreshToken:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  idToken:
                    type: string
                  refreshToken:
                    type: string
                  policyAccepted:
                    type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '401':
          description: Unauthorized
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          AUTH.*:
            statusCode: '401'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-postPatientLogin-dev/invocations
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  /api/patient/initialize:
    post:
      tags:
        - Patient
      summary: loginKey によるユーザ初期化
      description: >-
        指定された loginKey を確認し、存在していれば新規にパスワードを発行して refreshToken と共に返却する。IdToken
        を持つユーザ（自分自身）のものしか更新できない。
      requestBody:
        description: loginKey
        content:
          application/json:
            schema:
              type: object
              required:
                - loginKey
              properties:
                loginKey:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  idToken:
                    type: string
                  refreshToken:
                    type: string
                  policyAccepted:
                    type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-postInitializePatient-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: patientId
          in: path
          description: 更新したい療養者のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  /api/patient/getloginurl:
    post:
      tags:
        - Patient
      summary: ログインURLを指定された携帯電話番号に送信する
      description: 指定された電話番号に、IdToken つきのログイン用URLを送信する
      requestBody:
        description: phone number of user
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  description: 電話番号
                  type: string
                  example: 09033333333
        required: true
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  idToken:
                    type: string
                  refreshToken:
                    type: string
                  policyAccepted:
                    type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-postSendLoginURL-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: patientId
          in: path
          description: 更新したい療養者のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  /api/admin/centers/:
    get:
      tags:
        - Center
      summary: 保健所を取得する
      description: 全ての保健所を取得
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    centerId:
                      type: string
                    centerName:
                      type: string
                    emergencyPhone:
                      type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-getCenters-dev/invocations
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
    post:
      tags:
        - Center
      summary: 新たに保健所を作成する
      description: 指定された名前で、新たに保健所を作成します。
      security:
        - APIGatewayAdminAuthorizer: []
      requestBody:
        description: center model which you want to create.
        content:
          application/json:
            schema:
              type: object
              required:
                - centerName
              properties:
                centerName:
                  type: string
                emergencyPhone:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  centerId:
                    type: string
                  centerName:
                    type: string
                  emergencyPhone:
                    type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-postCenter-dev/invocations
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  /api/nurse/centers/:
    get:
      tags:
        - Center
      summary: 保健所を取得する(保健師用)
      description: 全ての保健所を取得
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    centerId:
                      type: string
                    centerName:
                      type: string
                    emergencyPhone:
                      type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-getCenters-dev/invocations
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  '/api/admin/centers/{centerId}':
    get:
      tags:
        - Center
      summary: 保健所の取得
      description: '指定された{centerId}を持つ保健所情報を返します'
      parameters:
        - name: centerId
          in: path
          description: 取得したい保健所のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  centerId:
                    type: string
                  centerName:
                    type: string
                  emergencyPhone:
                    type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-getCenter-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
    put:
      tags:
        - Center
      summary: 保健所の更新
      description: 指定されたcenterIdの保健所情報を更新します
      security:
        - APIGatewayAdminAuthorizer: []
      parameters:
        - name: centerId
          in: path
          description: 更新したい保健所のID
          required: true
          schema:
            type: string
      requestBody:
        description: center model which you want to update.
        content:
          application/json:
            schema:
              type: object
              required:
                - centerName
              properties:
                centerName:
                  type: string
                emergencyPhone:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  centerId:
                    type: string
                  centerName:
                    type: string
                  emergencyPhone:
                    type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-putCenter-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: centerId
          in: path
          description: 取得したい保健所のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  '/api/nurse/centers/{centerId}':
    get:
      tags:
        - Center
      summary: 保健所の取得(保健師用)
      description: '指定された{centerId}を持つ保健所情報を返します。'
      parameters:
        - name: centerId
          in: path
          description: 取得したい保健所のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  centerId:
                    type: string
                  centerName:
                    type: string
                  emergencyPhone:
                    type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-getCenter-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: centerId
          in: path
          description: 取得したい保健所のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  '/api/admin/centers/{centerId}/nurses/':
    get:
      tags:
        - Nurse
      summary: 指定の保健所に所属する観察者を表示
      description: '指定された{centerId}に所属する観察者の一覧を表示します'
      security:
        - APIGatewayAdminAuthorizer: []
      parameters:
        - name: centerId
          in: path
          description: 取得したい観察者が所属する保健所のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    nurseId:
                      type: string
                    manageCenters:
                      type: array
                      items:
                        type: object
                        properties:
                          centerId:
                            type: string
                          centerName:
                            type: string
                          emergencyPhone:
                            type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-getNurses-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: centerId
          in: path
          description: 取得したい保健所のID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
    post:
      tags:
        - Nurse
      summary: 新たに観察者を作成する
      description: 指定された保健所に対し、新たに観察者を作成します。
      security:
        - APIGatewayAdminAuthorizer: []
      parameters:
        - name: centerId
          in: path
          description: 作成したい観察者が所属する保健所のID
          required: true
          schema:
            type: string
      requestBody:
        description: nurse model which you want to create.
        content:
          application/json:
            schema:
              type: object
              properties:
                nurseId:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  nurseId:
                    type: string
                  password:
                    type: string
                  manageCenters:
                    type: array
                    items:
                      type: object
                      properties:
                        centerId:
                          type: string
                        centerName:
                          type: string
                        emergencyPhone:
                          type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-postNurse-dev/invocations
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
  '/api/nurse/centers/{centerId}/nurses/':
    get:
      tags:
        - Nurse
      summary: 指定の保健所に所属する観察者(保健師)を表示(保健師用)
      description: '指定された{centerId}に所属する観察者(保健師)の一覧を表示します'
      security:
        - APIGatewayNurseAuthorizer: []
      parameters:
        - name: centerId
          in: path
          description: 取得したい観察者が所属する保健所のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    nurseId:
                      type: string
                    manageCenters:
                      type: array
                      items:
                        type: object
                        properties:
                          centerId:
                            type: string
                          centerName:
                            type: string
                          emergencyPhone:
                            type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-getNurses-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: centerId
          in: path
          description: 取得したい保健所のID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
      x-codegen-request-body-name: body
  '/api/admin/nurses/{nurseId}':
    get:
      tags:
        - Nurse
      summary: 観察者の取得
      description: '指定された{nurseId}を持つ観察者情報を返します'
      security:
        - APIGatewayAdminAuthorizer: []
      parameters:
        - name: nurseId
          in: path
          description: 取得したい観察者のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  nurseId:
                    type: string
                  manageCenters:
                    type: array
                    items:
                      type: object
                      properties:
                        centerId:
                          type: string
                        centerName:
                          type: string
                        emergencyPhone:
                          type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-getNurse-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
    put:
      tags:
        - Nurse
      summary: 観察者の更新
      description: 指定されたnurseIdの観察者情報を更新します
      security:
        - APIGatewayAdminAuthorizer: []
      parameters:
        - name: nurseId
          in: path
          description: 更新したい観察者のID
          required: true
          schema:
            type: string
      requestBody:
        description: nurse model which you want to update.
        content:
          application/json:
            schema:
              type: object
              required:
                - manageCenters
              properties:
                manageCenters:
                  type: array
                  items:
                    type: object
                    properties:
                      centerId:
                        type: string
        required: true
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  nurseId:
                    type: string
                  manageCenters:
                    type: array
                    items:
                      type: object
                      properties:
                        centerId:
                          type: string
                        centerName:
                          type: string
                        emergencyPhone:
                          type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-putNurse-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: nurseId
          in: path
          description: 取得したい観察者のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  '/api/nurse/nurses/{nurseId}':
    get:
      tags:
        - Nurse
      summary: 観察者(保健師)の取得(保健師用)
      description: '指定された{nurseId}を持つ観察者情報を返します。'
      security:
        - APIGatewayNurseAuthorizer: []
      parameters:
        - name: nurseId
          in: path
          description: 取得したい観察者のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  nurseId:
                    type: string
                  manageCenters:
                    type: array
                    items:
                      type: object
                      properties:
                        centerId:
                          type: string
                        centerName:
                          type: string
                        emergencyPhone:
                          type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-getNurse-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: nurseId
          in: path
          description: 取得したい観察者のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  '/api/admin/centers/{centerId}/patients/':
    get:
      tags:
        - Patient
      summary: 指定の保健所に所属する療養者を表示
      description: >-
        指定された{centerId}に所属する療養者の一覧を表示します。並び順は、登録が新しい順です。各療養者の持つ病状報告は、最新20件のみ入っています。
      security:
        - APIGatewayAdminAuthorizer: []
      parameters:
        - name: centerId
          in: path
          description: 取得したい療養者が所属する保健所のID
          required: true
          schema:
            type: string
        - name: includeall
          in: query
          description: ダッシュボードに表示するかどうかのフラグがオフのユーザも取得する。省略すると false
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    patientId:
                      type: string
                    centerId:
                      type: string
                    policy_accepted:
                      type: string
                      format: date-time
                    phone:
                      type: string
                    memo:
                      type: string
                    display:
                      type: boolean
                    statuses:
                      type: array
                      items:
                        type: object
                        properties:
                          statusId:
                            type: string
                          patientId:
                            type: string
                          centerId:
                            type: string
                          created:
                            type: string
                            format: date-time
                          SpO2:
                            type: integer
                            format: int32
                          body_temperature:
                            type: number
                            format: float
                          pulse:
                            type: integer
                            format: int32
                          symptom:
                            type: object
                            properties:
                              symptomId:
                                type: string
                              cough:
                                type: boolean
                              phlegm:
                                type: boolean
                              suffocation:
                                type: boolean
                              headache:
                                type: boolean
                              sore_throat:
                                type: boolean
                              malaise:
                                type: boolean
                              nausea:
                                type: boolean
                              diarrhea:
                                type: boolean
                              difficulty_eating:
                                type: boolean
                              no_urination:
                                type: boolean
                              remarks:
                                type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-getPatients-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: centerId
          in: path
          description: 取得したい保健所のID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
    post:
      tags:
        - Patient
      summary: 新たに療養者を作成する
      description: 指定された保健所に対し、新たに療養者を作成します。
      security:
        - APIGatewayAdminAuthorizer: []
      parameters:
        - name: centerId
          in: path
          description: 作成したい療養者が所属する保健所のID
          required: true
          schema:
            type: string
      requestBody:
        description: 新たに療養者を登録する。システムで自動でログインID及びパスワードを生成して返す。
        content:
          application/json:
            schema:
              type: object
              required:
                - phone
              properties:
                patientId:
                  type: string
                phone:
                  type: string
                memo:
                  type: string
                display:
                  type: boolean
                sendSMS:
                  type: boolean
                isAccepted:
                  type: boolean
        required: true
      responses:
        '201':
          description: Creted
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  patientId:
                    type: string
                  centerId:
                    type: string
                  password:
                    type: string
                  policy_accepted:
                    type: string
                    format: date-time
                  phone:
                    type: string
                  memo:
                    type: string
                  display:
                    type: boolean
                  loginKey:
                    type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-postPatient-dev/invocations
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
  '/api/nurse/centers/{centerId}/patients/':
    get:
      tags:
        - Patient
      summary: 指定の保健所に所属する療養者を表示(保健師用)
      description: >-
        (自分が所属する保健所のみ操作可能)指定された{centerId}に所属する療養者の一覧を表示します。並び順は、登録が新しい順です。各療養者の持つ病状報告は、最新20件のみ入っています。
      security:
        - APIGatewayNurseAuthorizer: []
      parameters:
        - name: centerId
          in: path
          description: 取得したい療養者が所属する保健所のID
          required: true
          schema:
            type: string
        - name: includeall
          in: query
          description: ダッシュボードに表示するかどうかのフラグがオフのユーザも取得する。省略すると false
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    patientId:
                      type: string
                    centerId:
                      type: string
                    policy_accepted:
                      type: string
                      format: date-time
                    phone:
                      type: string
                    memo:
                      type: string
                    display:
                      type: boolean
                    statuses:
                      type: array
                      items:
                        type: object
                        properties:
                          statusId:
                            type: string
                          patientId:
                            type: string
                          centerId:
                            type: string
                          created:
                            type: string
                            format: date-time
                          SpO2:
                            type: integer
                            format: int32
                          body_temperature:
                            type: number
                            format: float
                          pulse:
                            type: integer
                            format: int32
                          symptom:
                            type: object
                            properties:
                              symptomId:
                                type: string
                              cough:
                                type: boolean
                              phlegm:
                                type: boolean
                              suffocation:
                                type: boolean
                              headache:
                                type: boolean
                              sore_throat:
                                type: boolean
                              malaise:
                                type: boolean
                              nausea:
                                type: boolean
                              diarrhea:
                                type: boolean
                              difficulty_eating:
                                type: boolean
                              no_urination:
                                type: boolean
                              remarks:
                                type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-getPatients-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: centerId
          in: path
          description: 取得したい保健所のID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
    post:
      tags:
        - Patient
      summary: 新たに療養者を作成する(保健師用)
      description: (自分が所属する保健所のみ操作可能)指定された保健所に対し、新たに療養者を作成します。
      security:
        - APIGatewayNurseAuthorizer: []
      parameters:
        - name: centerId
          in: path
          description: 作成したい療養者が所属する保健所のID
          required: true
          schema:
            type: string
      requestBody:
        description: 新たに療養者を登録する。システムで自動でログインID及びパスワードを生成して返す。
        content:
          application/json:
            schema:
              type: object
              required:
                - phone
              properties:
                patientId:
                  type: string
                phone:
                  type: string
                memo:
                  type: string
                display:
                  type: boolean
                sendSMS:
                  type: boolean
                isAccepted:
                  type: boolean
        required: true
      responses:
        '201':
          description: Creted
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  patientId:
                    type: string
                  centerId:
                    type: string
                  password:
                    type: string
                  policy_accepted:
                    type: string
                    format: date-time
                  phone:
                    type: string
                  memo:
                    type: string
                  display:
                    type: boolean
                  loginKey:
                    type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-postPatient-dev/invocations
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
  '/api/admin/patients/{patientId}':
    get:
      tags:
        - Patient
      summary: 療養者の取得
      description: '指定された{PatientId}を持つ療養者情報を返します。症状報告は最新の20件を表示します。'
      security:
        - APIGatewayAdminAuthorizer: []
      parameters:
        - name: patientId
          in: path
          description: 取得したい療養者のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  patientId:
                    type: string
                  centerId:
                    type: string
                  policy_accepted:
                    type: string
                    format: date-time
                  phone:
                    type: string
                  memo:
                    type: string
                  display:
                    type: boolean
                  statuses:
                    type: array
                    items:
                      type: object
                      properties:
                        statusId:
                          type: string
                        patientId:
                          type: string
                        centerId:
                          type: string
                        created:
                          type: string
                          format: date-time
                        SpO2:
                          type: integer
                          format: int32
                        body_temperature:
                          type: number
                          format: float
                        pulse:
                          type: integer
                          format: int32
                        symptom:
                          type: object
                          properties:
                            symptomId:
                              type: string
                            cough:
                              type: boolean
                            phlegm:
                              type: boolean
                            suffocation:
                              type: boolean
                            headache:
                              type: boolean
                            sore_throat:
                              type: boolean
                            malaise:
                              type: boolean
                            nausea:
                              type: boolean
                            diarrhea:
                              type: boolean
                            difficulty_eating:
                              type: boolean
                            no_urination:
                              type: boolean
                            remarks:
                              type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-getPatient-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
    put:
      tags:
        - Patient
      summary: 療養者の更新
      description: 指定されたPatientIdの療養者情報を更新します
      security:
        - APIGatewayAdminAuthorizer: []
      parameters:
        - name: patientId
          in: path
          description: 更新したい療養者のID
          required: true
          schema:
            type: string
      requestBody:
        description: Patient model which you want to update.
        content:
          application/json:
            schema:
              type: object
              required:
                - phone
              properties:
                phone:
                  type: string
                display:
                  type: boolean
        required: true
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  patientId:
                    type: string
                  centerId:
                    type: string
                  policy_accepted:
                    type: string
                    format: date-time
                  phone:
                    type: string
                  memo:
                    type: string
                  display:
                    type: boolean
                  statuses:
                    type: array
                    items:
                      type: object
                      properties:
                        statusId:
                          type: string
                        patientId:
                          type: string
                        centerId:
                          type: string
                        created:
                          type: string
                          format: date-time
                        SpO2:
                          type: integer
                          format: int32
                        body_temperature:
                          type: number
                          format: float
                        pulse:
                          type: integer
                          format: int32
                        symptom:
                          type: object
                          properties:
                            symptomId:
                              type: string
                            cough:
                              type: boolean
                            phlegm:
                              type: boolean
                            suffocation:
                              type: boolean
                            headache:
                              type: boolean
                            sore_throat:
                              type: boolean
                            malaise:
                              type: boolean
                            nausea:
                              type: boolean
                            diarrhea:
                              type: boolean
                            difficulty_eating:
                              type: boolean
                            no_urination:
                              type: boolean
                            remarks:
                              type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-putPatient-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: patientId
          in: path
          description: 取得したい療養者のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  '/api/nurse/patients/{patientId}':
    get:
      tags:
        - Patient
      summary: 療養者の取得(保険師用)
      description: '(自分が所属する保健所のみ操作可能)指定された{PatientId}を持つ療養者情報を返します。症状報告は最新の20件を表示します。'
      security:
        - APIGatewayNurseAuthorizer: []
      parameters:
        - name: patientId
          in: path
          description: 取得したい療養者のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  patientId:
                    type: string
                  centerId:
                    type: string
                  policy_accepted:
                    type: string
                    format: date-time
                  phone:
                    type: string
                  memo:
                    type: string
                  display:
                    type: boolean
                  statuses:
                    type: array
                    items:
                      type: object
                      properties:
                        statusId:
                          type: string
                        patientId:
                          type: string
                        centerId:
                          type: string
                        created:
                          type: string
                          format: date-time
                        SpO2:
                          type: integer
                          format: int32
                        body_temperature:
                          type: number
                          format: float
                        pulse:
                          type: integer
                          format: int32
                        symptom:
                          type: object
                          properties:
                            symptomId:
                              type: string
                            cough:
                              type: boolean
                            phlegm:
                              type: boolean
                            suffocation:
                              type: boolean
                            headache:
                              type: boolean
                            sore_throat:
                              type: boolean
                            malaise:
                              type: boolean
                            nausea:
                              type: boolean
                            diarrhea:
                              type: boolean
                            difficulty_eating:
                              type: boolean
                            no_urination:
                              type: boolean
                            remarks:
                              type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-getPatient-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
    put:
      tags:
        - Patient
      summary: 療養者の更新(保健師用)
      description: (自分が所属する保健所のみ操作可能)指定されたPatientIdの療養者情報を更新します
      security:
        - APIGatewayNurseAuthorizer: []
      parameters:
        - name: patientId
          in: path
          description: 更新したい療養者のID
          required: true
          schema:
            type: string
      requestBody:
        description: Patient model which you want to update.
        content:
          application/json:
            schema:
              type: object
              required:
                - phone
              properties:
                phone:
                  type: string
                display:
                  type: boolean
        required: true
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  patientId:
                    type: string
                  centerId:
                    type: string
                  policy_accepted:
                    type: string
                    format: date-time
                  phone:
                    type: string
                  memo:
                    type: string
                  display:
                    type: boolean
                  statuses:
                    type: array
                    items:
                      type: object
                      properties:
                        statusId:
                          type: string
                        patientId:
                          type: string
                        centerId:
                          type: string
                        created:
                          type: string
                          format: date-time
                        SpO2:
                          type: integer
                          format: int32
                        body_temperature:
                          type: number
                          format: float
                        pulse:
                          type: integer
                          format: int32
                        symptom:
                          type: object
                          properties:
                            symptomId:
                              type: string
                            cough:
                              type: boolean
                            phlegm:
                              type: boolean
                            suffocation:
                              type: boolean
                            headache:
                              type: boolean
                            sore_throat:
                              type: boolean
                            malaise:
                              type: boolean
                            nausea:
                              type: boolean
                            diarrhea:
                              type: boolean
                            difficulty_eating:
                              type: boolean
                            no_urination:
                              type: boolean
                            remarks:
                              type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-putPatient-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: patientId
          in: path
          description: 取得したい療養者のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  '/api/patient/patients/{patientId}':
    get:
      tags:
        - Patient
      summary: 療養者の取得(療養者用)
      description: '(自分のみ操作可能)指定された{PatientId}を持つ療養者情報を返します。症状報告は最新の20件を表示します。'
      security:
        - APIGatewayPatientAuthorizer: []
      parameters:
        - name: patientId
          in: path
          description: 取得したい療養者のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  patientId:
                    type: string
                  centerId:
                    type: string
                  policy_accepted:
                    type: string
                    format: date-time
                  phone:
                    type: string
                  memo:
                    type: string
                  display:
                    type: boolean
                  statuses:
                    type: array
                    items:
                      type: object
                      properties:
                        statusId:
                          type: string
                        patientId:
                          type: string
                        centerId:
                          type: string
                        created:
                          type: string
                          format: date-time
                        SpO2:
                          type: integer
                          format: int32
                        body_temperature:
                          type: number
                          format: float
                        pulse:
                          type: integer
                          format: int32
                        symptom:
                          type: object
                          properties:
                            symptomId:
                              type: string
                            cough:
                              type: boolean
                            phlegm:
                              type: boolean
                            suffocation:
                              type: boolean
                            headache:
                              type: boolean
                            sore_throat:
                              type: boolean
                            malaise:
                              type: boolean
                            nausea:
                              type: boolean
                            diarrhea:
                              type: boolean
                            difficulty_eating:
                              type: boolean
                            no_urination:
                              type: boolean
                            remarks:
                              type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-getPatient-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: patientId
          in: path
          description: 取得したい療養者のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  '/api/admin/patients/{patientId}/statuses':
    get:
      tags:
        - Status
      summary: 指定の療養者が所有する症状報告を表示
      description: '指定された{patientId}に所属する症状報告の一覧を表示します'
      security:
        - APIGatewayAdminAuthorizer: []
      parameters:
        - name: patientId
          in: path
          description: 取得したい症状報告の対象となる療養者ID
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: 取得件数
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: オフセット件数
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    statusId:
                      type: string
                    patientId:
                      type: string
                    centerId:
                      type: string
                    created:
                      type: string
                      format: date-time
                    SpO2:
                      type: integer
                      format: int32
                    body_temperature:
                      type: number
                      format: float
                    pulse:
                      type: integer
                      format: int32
                    symptom:
                      type: object
                      properties:
                        symptomId:
                          type: string
                        cough:
                          type: boolean
                        phlegm:
                          type: boolean
                        suffocation:
                          type: boolean
                        headache:
                          type: boolean
                        sore_throat:
                          type: boolean
                        malaise:
                          type: boolean
                        nausea:
                          type: boolean
                        diarrhea:
                          type: boolean
                        difficulty_eating:
                          type: boolean
                        no_urination:
                          type: boolean
                        remarks:
                          type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-getStatuses-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: patientId
          in: path
          description: 取得したい保健所のID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
    post:
      tags:
        - Status
      summary: 新たに症状報告を作成する
      description: 指定された療養者に対し、新たに症状報告を作成します。
      security:
        - APIGatewayAdminAuthorizer: []
      parameters:
        - name: patientId
          in: path
          description: 作成したい症状報告を報告する療養者ID
          required: true
          schema:
            type: string
      requestBody:
        description: 症状情報を登録する。Symptom のデータも合わせて登録する。
        content:
          application/json:
            schema:
              type: object
              required:
                - SpO2
                - body_temperature
                - pulse
              properties:
                SpO2:
                  type: integer
                  format: int32
                body_temperature:
                  type: number
                  format: float
                pulse:
                  type: integer
                  format: int32
                symptom:
                  type: object
                  required:
                    - cough
                    - phlegm
                    - suffocation
                    - headache
                    - sore_throat
                    - malaise
                    - nausea
                    - diarrhea
                    - difficulty_eating
                    - no_urination
                  properties:
                    cough:
                      type: boolean
                    phlegm:
                      type: boolean
                    suffocation:
                      type: boolean
                    headache:
                      type: boolean
                    sore_throat:
                      type: boolean
                    malaise:
                      type: boolean
                    nausea:
                      type: boolean
                    diarrhea:
                      type: boolean
                    difficulty_eating:
                      type: boolean
                    no_urination:
                      type: boolean
                    remarks:
                      type: string
        required: true
      responses:
        '201':
          description: Creted
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusId:
                    type: string
                  patientId:
                    type: string
                  centerId:
                    type: string
                  created:
                    type: string
                    format: date-time
                  SpO2:
                    type: integer
                    format: int32
                  body_temperature:
                    type: number
                    format: float
                  pulse:
                    type: integer
                    format: int32
                  symptom:
                    type: object
                    properties:
                      symptomId:
                        type: string
                      cough:
                        type: boolean
                      phlegm:
                        type: boolean
                      suffocation:
                        type: boolean
                      headache:
                        type: boolean
                      sore_throat:
                        type: boolean
                      malaise:
                        type: boolean
                      nausea:
                        type: boolean
                      diarrhea:
                        type: boolean
                      difficulty_eating:
                        type: boolean
                      no_urination:
                        type: boolean
                      remarks:
                        type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-postStatus-dev/invocations
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
  '/api/admin/patients/{patientId}/statuses/{statusId}':
    delete:
      tags:
        - Status
      summary: 病状報告の削除
      description: 指定されたstatusIdの症状報告情報を削除します。成功したら、responseCode 0 を返します。
      security:
        - APIGatewayAdminAuthorizer: []
      parameters:
        - name: patientId
          in: path
          description: 削除したい症状報告を持っている患者のID
          required: true
          schema:
            type: string
        - name: statusId
          in: path
          description: 削除したい症状報告のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: DELETED
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  responseCode:
                    type: number
                  responseMessage:
                    type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-deleteStatus-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: patientId
          in: path
          description: 削除したい症状報告を持っている患者のID
          required: true
          schema:
            type: string
        - name: statusId
          in: path
          description: 取得したい療養者のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  '/api/nurse/patients/{patientId}/statuses':
    get:
      tags:
        - Status
      summary: 指定の療養者が持つ症状報告を表示
      description: '(自分が所属する保健所に所属する療養者のみ表示可能)指定された{patientId}に所属する症状報告の一覧を表示します'
      security:
        - APIGatewayNurseAuthorizer: []
      parameters:
        - name: patientId
          in: path
          description: 取得したい症状報告の対象となる療養者ID
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: 取得件数
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: オフセット件数
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    statusId:
                      type: string
                    patientId:
                      type: string
                    centerId:
                      type: string
                    created:
                      type: string
                      format: date-time
                    SpO2:
                      type: integer
                      format: int32
                    body_temperature:
                      type: number
                      format: float
                    pulse:
                      type: integer
                      format: int32
                    symptom:
                      type: object
                      properties:
                        symptomId:
                          type: string
                        cough:
                          type: boolean
                        phlegm:
                          type: boolean
                        suffocation:
                          type: boolean
                        headache:
                          type: boolean
                        sore_throat:
                          type: boolean
                        malaise:
                          type: boolean
                        nausea:
                          type: boolean
                        diarrhea:
                          type: boolean
                        difficulty_eating:
                          type: boolean
                        no_urination:
                          type: boolean
                        remarks:
                          type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-getStatuses-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: patientId
          in: path
          description: 取得したい保健所のID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
    post:
      tags:
        - Status
      summary: 新たに症状報告を作成する
      description: (自分が所属する保健所に所属する療養者のみ作成可能)指定された療養者に対し、新たに症状報告を作成します。
      security:
        - APIGatewayNurseAuthorizer: []
      parameters:
        - name: patientId
          in: path
          description: 作成したい症状報告を報告する療養者ID
          required: true
          schema:
            type: string
      requestBody:
        description: 症状情報を登録する。Symptom のデータも合わせて登録する。
        content:
          application/json:
            schema:
              type: object
              required:
                - SpO2
                - body_temperature
                - pulse
              properties:
                SpO2:
                  type: integer
                  format: int32
                body_temperature:
                  type: number
                  format: float
                pulse:
                  type: integer
                  format: int32
                symptom:
                  type: object
                  required:
                    - cough
                    - phlegm
                    - suffocation
                    - headache
                    - sore_throat
                    - malaise
                    - nausea
                    - diarrhea
                    - difficulty_eating
                    - no_urination
                  properties:
                    cough:
                      type: boolean
                    phlegm:
                      type: boolean
                    suffocation:
                      type: boolean
                    headache:
                      type: boolean
                    sore_throat:
                      type: boolean
                    malaise:
                      type: boolean
                    nausea:
                      type: boolean
                    diarrhea:
                      type: boolean
                    difficulty_eating:
                      type: boolean
                    no_urination:
                      type: boolean
                    remarks:
                      type: string
        required: true
      responses:
        '201':
          description: Creted
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusId:
                    type: string
                  patientId:
                    type: string
                  centerId:
                    type: string
                  created:
                    type: string
                    format: date-time
                  SpO2:
                    type: integer
                    format: int32
                  body_temperature:
                    type: number
                    format: float
                  pulse:
                    type: integer
                    format: int32
                  symptom:
                    type: object
                    properties:
                      symptomId:
                        type: string
                      cough:
                        type: boolean
                      phlegm:
                        type: boolean
                      suffocation:
                        type: boolean
                      headache:
                        type: boolean
                      sore_throat:
                        type: boolean
                      malaise:
                        type: boolean
                      nausea:
                        type: boolean
                      diarrhea:
                        type: boolean
                      difficulty_eating:
                        type: boolean
                      no_urination:
                        type: boolean
                      remarks:
                        type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-postStatus-dev/invocations
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
  '/api/nurse/patients/{patientId}/statuses/{statusId}':
    delete:
      tags:
        - Status
      summary: 病状報告の削除
      description: (自分が所属する保健所のみ操作可能)指定されたstatusIdの症状報告情報を削除します。成功したら、responseCode 0 を返します。
      security:
        - APIGatewayNurseAuthorizer: []
      parameters:
        - name: patientId
          in: path
          description: 削除したい症状報告を持っている患者のID
          required: true
          schema:
            type: string
        - name: statusId
          in: path
          description: 削除したい症状報告のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: DELETED
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  responseCode:
                    type: number
                  responseMessage:
                    type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-deleteStatus-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: patientId
          in: path
          description: 削除したい症状報告を持っている患者のID
          required: true
          schema:
            type: string
        - name: statusId
          in: path
          description: 取得したい療養者のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  '/api/patient/patients/{patientId}/statuses':
    get:
      tags:
        - Status
      summary: 指定の療養者が持つ症状報告を表示
      description: '(自分の症状のみ表示可能)指定された{patientId}に所属する症状報告の一覧を表示します'
      security:
        - APIGatewayPatientAuthorizer: []
      parameters:
        - name: patientId
          in: path
          description: 取得したい症状報告の対象となる療養者ID
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: 取得件数
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: オフセット件数
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    statusId:
                      type: string
                    patientId:
                      type: string
                    centerId:
                      type: string
                    created:
                      type: string
                      format: date-time
                    SpO2:
                      type: integer
                      format: int32
                    body_temperature:
                      type: number
                      format: float
                    pulse:
                      type: integer
                      format: int32
                    symptom:
                      type: object
                      properties:
                        symptomId:
                          type: string
                        cough:
                          type: boolean
                        phlegm:
                          type: boolean
                        suffocation:
                          type: boolean
                        headache:
                          type: boolean
                        sore_throat:
                          type: boolean
                        malaise:
                          type: boolean
                        nausea:
                          type: boolean
                        diarrhea:
                          type: boolean
                        difficulty_eating:
                          type: boolean
                        no_urination:
                          type: boolean
                        remarks:
                          type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-getStatuses-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: patientId
          in: path
          description: 取得したい保健所のID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
    post:
      tags:
        - Status
      summary: 新たに症状報告を作成する
      description: (自分の症状のみ作成可能)指定された療養者に対し、新たに症状報告を作成します。
      security:
        - APIGatewayPatientAuthorizer: []
      parameters:
        - name: patientId
          in: path
          description: 作成したい症状報告を報告する療養者ID
          required: true
          schema:
            type: string
      requestBody:
        description: 症状情報を登録する。Symptom のデータも合わせて登録する。
        content:
          application/json:
            schema:
              type: object
              required:
                - SpO2
                - body_temperature
                - pulse
              properties:
                SpO2:
                  type: integer
                  format: int32
                body_temperature:
                  type: number
                  format: float
                pulse:
                  type: integer
                  format: int32
                symptom:
                  type: object
                  required:
                    - cough
                    - phlegm
                    - suffocation
                    - headache
                    - sore_throat
                    - malaise
                    - nausea
                    - diarrhea
                    - difficulty_eating
                    - no_urination
                  properties:
                    cough:
                      type: boolean
                    phlegm:
                      type: boolean
                    suffocation:
                      type: boolean
                    headache:
                      type: boolean
                    sore_throat:
                      type: boolean
                    malaise:
                      type: boolean
                    nausea:
                      type: boolean
                    diarrhea:
                      type: boolean
                    difficulty_eating:
                      type: boolean
                    no_urination:
                      type: boolean
                    remarks:
                      type: string
        required: true
      responses:
        '201':
          description: Creted
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusId:
                    type: string
                  patientId:
                    type: string
                  centerId:
                    type: string
                  created:
                    type: string
                    format: date-time
                  SpO2:
                    type: integer
                    format: int32
                  body_temperature:
                    type: number
                    format: float
                  pulse:
                    type: integer
                    format: int32
                  symptom:
                    type: object
                    properties:
                      symptomId:
                        type: string
                      cough:
                        type: boolean
                      phlegm:
                        type: boolean
                      suffocation:
                        type: boolean
                      headache:
                        type: boolean
                      sore_throat:
                        type: boolean
                      malaise:
                        type: boolean
                      nausea:
                        type: boolean
                      diarrhea:
                        type: boolean
                      difficulty_eating:
                        type: boolean
                      no_urination:
                        type: boolean
                      remarks:
                        type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-postStatus-dev/invocations
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
  '/api/patient/patients/{patientId}/statuses/{statusId}':
    delete:
      tags:
        - Status
      summary: 病状報告の削除
      description: >-
        (自分の症状のみ操作可能)指定されたstatusIdの症状報告情報を削除します。成功したら、responseCode 200
        と、削除後のステータス一覧 を返します。
      security:
        - APIGatewayPatientAuthorizer: []
      parameters:
        - name: patientId
          in: path
          description: 削除したい症状報告を持っている患者のID
          required: true
          schema:
            type: string
        - name: statusId
          in: path
          description: 削除したい症状報告のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: DELETED
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  patientId:
                    type: string
                  centerId:
                    type: string
                  policy_accepted:
                    type: string
                    format: date-time
                  phone:
                    type: string
                  memo:
                    type: string
                  display:
                    type: boolean
                  statuses:
                    type: array
                    items:
                      type: object
                      properties:
                        statusId:
                          type: string
                        patientId:
                          type: string
                        centerId:
                          type: string
                        created:
                          type: string
                          format: date-time
                        SpO2:
                          type: integer
                          format: int32
                        body_temperature:
                          type: number
                          format: float
                        pulse:
                          type: integer
                          format: int32
                        symptom:
                          type: object
                          properties:
                            symptomId:
                              type: string
                            cough:
                              type: boolean
                            phlegm:
                              type: boolean
                            suffocation:
                              type: boolean
                            headache:
                              type: boolean
                            sore_throat:
                              type: boolean
                            malaise:
                              type: boolean
                            nausea:
                              type: boolean
                            diarrhea:
                              type: boolean
                            difficulty_eating:
                              type: boolean
                            no_urination:
                              type: boolean
                            remarks:
                              type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-deleteStatus-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: patientId
          in: path
          description: 削除したい症状報告を持っている患者のID
          required: true
          schema:
            type: string
        - name: statusId
          in: path
          description: 取得したい病状報告のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  '/api/patient/patients/{patientId}/accept_policy':
    post:
      tags:
        - Patient
      summary: 利用規約への同意
      description: 指定されたPatientIdの policy_accepted を現在時間で更新します。ログインした本人しか利用できません。
      security:
        - APIGatewayPatientAuthorizer: []
      parameters:
        - name: patientId
          in: path
          description: 更新したい療養者のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                  user:
                    type: object
                    properties:
                      username:
                        type: string
                      idToken:
                        type: string
                      refreshToken:
                        type: string
                      policyAccepted:
                        type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-postAcceptPolicy-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: patientId
          in: path
          description: 取得したい療養者のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
components:
  schemas:
    Center:
      type: object
      properties:
        centerId:
          type: string
        centerName:
          type: string
        emergencyPhone:
          type: string
    consumeCenter:
      type: object
      required:
        - centerName
      properties:
        centerName:
          type: string
        emergencyPhone:
          type: string
    Centers:
      type: array
      items:
        type: object
        properties:
          centerId:
            type: string
          centerName:
            type: string
          emergencyPhone:
            type: string
    Nurse:
      type: object
      properties:
        nurseId:
          type: string
        manageCenters:
          type: array
          items:
            type: object
            properties:
              centerId:
                type: string
              centerName:
                type: string
              emergencyPhone:
                type: string
    Nurses:
      type: array
      items:
        type: object
        properties:
          nurseId:
            type: string
          manageCenters:
            type: array
            items:
              type: object
              properties:
                centerId:
                  type: string
                centerName:
                  type: string
                emergencyPhone:
                  type: string
    Patient:
      type: object
      properties:
        patientId:
          type: string
        centerId:
          type: string
        policy_accepted:
          type: string
          format: date-time
        phone:
          type: string
        memo:
          type: string
        display:
          type: boolean
        statuses:
          type: array
          items:
            type: object
            properties:
              statusId:
                type: string
              patientId:
                type: string
              centerId:
                type: string
              created:
                type: string
                format: date-time
              SpO2:
                type: integer
                format: int32
              body_temperature:
                type: number
                format: float
              pulse:
                type: integer
                format: int32
              symptom:
                type: object
                properties:
                  symptomId:
                    type: string
                  cough:
                    type: boolean
                  phlegm:
                    type: boolean
                  suffocation:
                    type: boolean
                  headache:
                    type: boolean
                  sore_throat:
                    type: boolean
                  malaise:
                    type: boolean
                  nausea:
                    type: boolean
                  diarrhea:
                    type: boolean
                  difficulty_eating:
                    type: boolean
                  no_urination:
                    type: boolean
                  remarks:
                    type: string
    consumePatient:
      type: object
      required:
        - phone
      properties:
        patientId:
          type: string
        phone:
          type: string
        memo:
          type: string
        display:
          type: boolean
        sendSMS:
          type: boolean
        isAccepted:
          type: boolean
    Patients:
      type: array
      items:
        type: object
        properties:
          patientId:
            type: string
          centerId:
            type: string
          policy_accepted:
            type: string
            format: date-time
          phone:
            type: string
          memo:
            type: string
          display:
            type: boolean
          statuses:
            type: array
            items:
              type: object
              properties:
                statusId:
                  type: string
                patientId:
                  type: string
                centerId:
                  type: string
                created:
                  type: string
                  format: date-time
                SpO2:
                  type: integer
                  format: int32
                body_temperature:
                  type: number
                  format: float
                pulse:
                  type: integer
                  format: int32
                symptom:
                  type: object
                  properties:
                    symptomId:
                      type: string
                    cough:
                      type: boolean
                    phlegm:
                      type: boolean
                    suffocation:
                      type: boolean
                    headache:
                      type: boolean
                    sore_throat:
                      type: boolean
                    malaise:
                      type: boolean
                    nausea:
                      type: boolean
                    diarrhea:
                      type: boolean
                    difficulty_eating:
                      type: boolean
                    no_urination:
                      type: boolean
                    remarks:
                      type: string
    Statuses:
      type: array
      items:
        type: object
        properties:
          statusId:
            type: string
          patientId:
            type: string
          centerId:
            type: string
          created:
            type: string
            format: date-time
          SpO2:
            type: integer
            format: int32
          body_temperature:
            type: number
            format: float
          pulse:
            type: integer
            format: int32
          symptom:
            type: object
            properties:
              symptomId:
                type: string
              cough:
                type: boolean
              phlegm:
                type: boolean
              suffocation:
                type: boolean
              headache:
                type: boolean
              sore_throat:
                type: boolean
              malaise:
                type: boolean
              nausea:
                type: boolean
              diarrhea:
                type: boolean
              difficulty_eating:
                type: boolean
              no_urination:
                type: boolean
              remarks:
                type: string
    Status:
      type: object
      properties:
        statusId:
          type: string
        patientId:
          type: string
        centerId:
          type: string
        created:
          type: string
          format: date-time
        SpO2:
          type: integer
          format: int32
        body_temperature:
          type: number
          format: float
        pulse:
          type: integer
          format: int32
        symptom:
          type: object
          properties:
            symptomId:
              type: string
            cough:
              type: boolean
            phlegm:
              type: boolean
            suffocation:
              type: boolean
            headache:
              type: boolean
            sore_throat:
              type: boolean
            malaise:
              type: boolean
            nausea:
              type: boolean
            diarrhea:
              type: boolean
            difficulty_eating:
              type: boolean
            no_urination:
              type: boolean
            remarks:
              type: string
    consumeStatus:
      type: object
      required:
        - SpO2
        - body_temperature
        - pulse
      properties:
        SpO2:
          type: integer
          format: int32
        body_temperature:
          type: number
          format: float
        pulse:
          type: integer
          format: int32
        symptom:
          type: object
          required:
            - cough
            - phlegm
            - suffocation
            - headache
            - sore_throat
            - malaise
            - nausea
            - diarrhea
            - difficulty_eating
            - no_urination
          properties:
            cough:
              type: boolean
            phlegm:
              type: boolean
            suffocation:
              type: boolean
            headache:
              type: boolean
            sore_throat:
              type: boolean
            malaise:
              type: boolean
            nausea:
              type: boolean
            diarrhea:
              type: boolean
            difficulty_eating:
              type: boolean
            no_urination:
              type: boolean
            remarks:
              type: string
    consumeSymptom:
      type: object
      required:
        - cough
        - phlegm
        - suffocation
        - headache
        - sore_throat
        - malaise
        - nausea
        - diarrhea
        - difficulty_eating
        - no_urination
      properties:
        cough:
          type: boolean
        phlegm:
          type: boolean
        suffocation:
          type: boolean
        headache:
          type: boolean
        sore_throat:
          type: boolean
        malaise:
          type: boolean
        nausea:
          type: boolean
        diarrhea:
          type: boolean
        difficulty_eating:
          type: boolean
        no_urination:
          type: boolean
        remarks:
          type: string
  securitySchemes:
    APIGatewayAdminAuthorizer:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: cognito_user_pools
      x-amazon-apigateway-authorizer:
        type: cognito_user_pools
        providerARNs:
          - 'Fn::Sub': '${RPMAdminUserPool.Arn}'
        identityValidationExpression: .*
    APIGatewayNurseAuthorizer:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: cognito_user_pools
      x-amazon-apigateway-authorizer:
        type: cognito_user_pools
        providerARNs:
          - 'Fn::Sub': '${RPMNurseUserPool.Arn}'
        identityValidationExpression: .*
    APIGatewayPatientAuthorizer:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: cognito_user_pools
      x-amazon-apigateway-authorizer:
        type: cognito_user_pools
        providerARNs:
          - 'Fn::Sub': '${RPMPatientUserPool.Arn}'
        identityValidationExpression: .*
tags:
  - name: Center
    description: 保健所に関するモデル
  - name: Nurse
    description: 観察者（保健師など）に関するモデル
  - name: Patient
    description: 療養者に関するモデル
  - name: Status
    description: 症状報告に関するモデル
  - name: CORS
    description: Cross-Origin Resource Sharing 設定
